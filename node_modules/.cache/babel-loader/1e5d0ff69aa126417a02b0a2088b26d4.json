{"ast":null,"code":"var _jsxFileName = \"/Users/R1d/Desktop/taxer/src/pages/Auth/RegestrationPage/RegestrationPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegestrationPage = () => {\n  _s();\n\n  const itemsss = [{\n    id: 1,\n    item: \"phone\"\n  }, {\n    id: 2,\n    item: \"computer\"\n  }];\n  const [errMessage, setErrMessage] = useState(``);\n  const [value, setValue] = useState(null);\n  const [items, setItems] = useState();\n  useEffect(() => {\n    async function sendData() {\n      await fetch(\"/api/db/user\", {\n        method: \"POST\",\n        body: JSON.stringify(value)\n      });\n    }\n\n    sendData();\n  }, []); // useEffect(() => {\n  //   async function sendData() {\n  //     await fetch(\"/api/items\")\n  //       .then((res) => res.json())\n  //       .then((data) => console.log(data));\n  //   }\n  //   sendData();\n  // }, []);\n  // useEffect(() => {\n  //   axios.post(\"/api/db/user\").then((res) => res.send(value));\n  // }, [value]);\n  // const sendValue = async () => {\n  //   await fetch(\"/api/db/user\", {\n  //     method: \"POST\",\n  //     body: JSON.stringify(value),\n  //   });\n  // };\n\n  useEffect(() => {\n    const checkPwd = () => {\n      if (value && value.password !== value.repeatPassword) {\n        console.log(\"Error pwd\");\n        setErrMessage(`Passwords do not match`);\n        return;\n      }\n\n      setErrMessage(``);\n    };\n\n    checkPwd(); // sendValue();\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\"\n      },\n      onSubmit: async values => {\n        // alert(JSON.stringify(values, null, 2));\n        // fetch(\"/api/db/user\", {\n        //   method: \"POST\",\n        //   params: JSON.stringify(itemsss),\n        // });\n        axios.get(\"/api/db/user\", {\n          params: values\n        });\n        console.log(\"VALUES\", values);\n        setValue(values);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"repeatPassword\",\n          type: \"password\",\n          placeholder: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), errMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegestrationPage, \"LxSr23jBGJq+vfiFl++N1ou5iuA=\");\n\n_c = RegestrationPage;\nexport default RegestrationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegestrationPage\");","map":{"version":3,"names":["useEffect","useState","Formik","Field","Form","axios","RegestrationPage","itemsss","id","item","errMessage","setErrMessage","value","setValue","items","setItems","sendData","fetch","method","body","JSON","stringify","checkPwd","password","repeatPassword","console","log","name","email","values","get","params"],"sources":["/Users/R1d/Desktop/taxer/src/pages/Auth/RegestrationPage/RegestrationPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport axios from \"axios\";\n\nconst RegestrationPage = () => {\n  const itemsss = [\n    { id: 1, item: \"phone\" },\n    { id: 2, item: \"computer\" },\n  ];\n  const [errMessage, setErrMessage] = useState(``);\n  const [value, setValue] = useState(null);\n  const [items, setItems] = useState();\n\n  useEffect(() => {\n    async function sendData() {\n      await fetch(\"/api/db/user\", {\n        method: \"POST\",\n        body: JSON.stringify(value),\n      });\n    }\n    sendData();\n  }, []);\n  // useEffect(() => {\n  //   async function sendData() {\n  //     await fetch(\"/api/items\")\n  //       .then((res) => res.json())\n  //       .then((data) => console.log(data));\n  //   }\n  //   sendData();\n  // }, []);\n\n  // useEffect(() => {\n  //   axios.post(\"/api/db/user\").then((res) => res.send(value));\n  // }, [value]);\n\n  // const sendValue = async () => {\n  //   await fetch(\"/api/db/user\", {\n  //     method: \"POST\",\n  //     body: JSON.stringify(value),\n  //   });\n  // };\n  useEffect(() => {\n    const checkPwd = () => {\n      if (value && value.password !== value.repeatPassword) {\n        console.log(\"Error pwd\");\n        setErrMessage(`Passwords do not match`);\n        return;\n      }\n      setErrMessage(``);\n    };\n    checkPwd();\n    // sendValue();\n  }, [value]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          repeatPassword: \"\",\n        }}\n        onSubmit={async (values) => {\n          // alert(JSON.stringify(values, null, 2));\n          // fetch(\"/api/db/user\", {\n          //   method: \"POST\",\n          //   params: JSON.stringify(itemsss),\n          // });\n          axios.get(\"/api/db/user\", { params: values });\n          console.log(\"VALUES\", values);\n          setValue(values);\n        }}\n      >\n        <Form>\n          <Field name=\"name\" type=\"text\" placeholder=\"Name\" />\n          <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <Field\n            name=\"repeatPassword\"\n            type=\"password\"\n            placeholder=\"Repeat password\"\n          />\n          {errMessage}\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegestrationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}