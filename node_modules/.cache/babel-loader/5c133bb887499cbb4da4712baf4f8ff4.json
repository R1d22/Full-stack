{"ast":null,"code":"var _jsxFileName = \"/Users/R1d/Desktop/taxer/src/pages/Auth/RegestrationPage/RegestrationPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegestrationPage = () => {\n  _s();\n\n  const [errMessage, setErrMessage] = useState(``);\n  const [value, setValue] = useState(null);\n\n  const checkPwd = () => {\n    if (value && value.password !== value.repeatPassword) {\n      console.log(\"Error pwd\");\n      setErrMessage(`Passwords do not match`);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    const checkPwd = () => {\n      if (value && value.password !== value.repeatPassword) {\n        console.log(\"Error pwd\");\n        setErrMessage(`Passwords do not match`);\n        return;\n      }\n    };\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\"\n      },\n      onSubmit: values => {\n        //   await new Promise((resolve) => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n        console.log(\"1\", values);\n        checkPwd();\n        setValue(values);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"repeatPassword\",\n          type: \"password\",\n          placeholder: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), errMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegestrationPage, \"AbYi15U0sJZt8HEtC/6srf0lvo8=\");\n\n_c = RegestrationPage;\nexport default RegestrationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegestrationPage\");","map":{"version":3,"names":["useEffect","useState","Formik","Field","Form","RegestrationPage","errMessage","setErrMessage","value","setValue","checkPwd","password","repeatPassword","console","log","name","email","values","alert","JSON","stringify"],"sources":["/Users/R1d/Desktop/taxer/src/pages/Auth/RegestrationPage/RegestrationPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Formik, Field, Form } from \"formik\";\n\nconst RegestrationPage = () => {\n  const [errMessage, setErrMessage] = useState(``);\n  const [value, setValue] = useState(null);\n\n  const checkPwd = () => {\n    if (value && value.password !== value.repeatPassword) {\n      console.log(\"Error pwd\");\n      setErrMessage(`Passwords do not match`);\n      return;\n    }\n  };\n  useEffect(() => {\n    const checkPwd = () => {\n      if (value && value.password !== value.repeatPassword) {\n        console.log(\"Error pwd\");\n        setErrMessage(`Passwords do not match`);\n        return;\n      }\n    };\n  }, [value]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          repeatPassword: \"\",\n        }}\n        onSubmit={(values) => {\n          //   await new Promise((resolve) => setTimeout(resolve, 500));\n          alert(JSON.stringify(values, null, 2));\n          console.log(\"1\", values);\n          checkPwd();\n          setValue(values);\n        }}\n      >\n        <Form>\n          <Field name=\"name\" type=\"text\" placeholder=\"Name\" />\n          <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n          <Field name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <Field\n            name=\"repeatPassword\"\n            type=\"password\"\n            placeholder=\"Repeat password\"\n          />\n          {errMessage}\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegestrationPage;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAE,EAAF,CAA5C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMS,QAAQ,GAAG,MAAM;IACrB,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAN,KAAmBH,KAAK,CAACI,cAAtC,EAAsD;MACpDC,OAAO,CAACC,GAAR,CAAY,WAAZ;MACAP,aAAa,CAAE,wBAAF,CAAb;MACA;IACD;EACF,CAND;;EAOAP,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAG,MAAM;MACrB,IAAIF,KAAK,IAAIA,KAAK,CAACG,QAAN,KAAmBH,KAAK,CAACI,cAAtC,EAAsD;QACpDC,OAAO,CAACC,GAAR,CAAY,WAAZ;QACAP,aAAa,CAAE,wBAAF,CAAb;QACA;MACD;IACF,CAND;EAOD,CARQ,EAQN,CAACC,KAAD,CARM,CAAT;EAUA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,aAAa,EAAE;QACbO,IAAI,EAAE,EADO;QAEbC,KAAK,EAAE,EAFM;QAGbL,QAAQ,EAAE,EAHG;QAIbC,cAAc,EAAE;MAJH,CADjB;MAOE,QAAQ,EAAGK,MAAD,IAAY;QACpB;QACAC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QACAJ,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBG,MAAjB;QACAP,QAAQ;QACRD,QAAQ,CAACQ,MAAD,CAAR;MACD,CAbH;MAAA,uBAeE,QAAC,IAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,MAAxB;UAA+B,WAAW,EAAC;QAA3C;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,IAAI,EAAC,OAAzB;UAAiC,WAAW,EAAC;QAA7C;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,UAA5B;UAAuC,WAAW,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE,QAAC,KAAD;UACE,IAAI,EAAC,gBADP;UAEE,IAAI,EAAC,UAFP;UAGE,WAAW,EAAC;QAHd;UAAA;UAAA;UAAA;QAAA,QAJF,EASGX,UATH,eAUE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA;QAAA;QAAA;QAAA;MAAA;IAfF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAgCD,CArDD;;GAAMD,gB;;KAAAA,gB;AAuDN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}